{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { CognitoIdentityClient } from \"./CognitoIdentityClient\";\nimport { CreateIdentityPoolCommand } from \"./commands/CreateIdentityPoolCommand\";\nimport { DeleteIdentitiesCommand } from \"./commands/DeleteIdentitiesCommand\";\nimport { DeleteIdentityPoolCommand } from \"./commands/DeleteIdentityPoolCommand\";\nimport { DescribeIdentityCommand } from \"./commands/DescribeIdentityCommand\";\nimport { DescribeIdentityPoolCommand } from \"./commands/DescribeIdentityPoolCommand\";\nimport { GetCredentialsForIdentityCommand } from \"./commands/GetCredentialsForIdentityCommand\";\nimport { GetIdCommand } from \"./commands/GetIdCommand\";\nimport { GetIdentityPoolRolesCommand } from \"./commands/GetIdentityPoolRolesCommand\";\nimport { GetOpenIdTokenCommand } from \"./commands/GetOpenIdTokenCommand\";\nimport { GetOpenIdTokenForDeveloperIdentityCommand } from \"./commands/GetOpenIdTokenForDeveloperIdentityCommand\";\nimport { ListIdentitiesCommand } from \"./commands/ListIdentitiesCommand\";\nimport { ListIdentityPoolsCommand } from \"./commands/ListIdentityPoolsCommand\";\nimport { ListTagsForResourceCommand } from \"./commands/ListTagsForResourceCommand\";\nimport { LookupDeveloperIdentityCommand } from \"./commands/LookupDeveloperIdentityCommand\";\nimport { MergeDeveloperIdentitiesCommand } from \"./commands/MergeDeveloperIdentitiesCommand\";\nimport { SetIdentityPoolRolesCommand } from \"./commands/SetIdentityPoolRolesCommand\";\nimport { TagResourceCommand } from \"./commands/TagResourceCommand\";\nimport { UnlinkDeveloperIdentityCommand } from \"./commands/UnlinkDeveloperIdentityCommand\";\nimport { UnlinkIdentityCommand } from \"./commands/UnlinkIdentityCommand\";\nimport { UntagResourceCommand } from \"./commands/UntagResourceCommand\";\nimport { UpdateIdentityPoolCommand } from \"./commands/UpdateIdentityPoolCommand\";\n/**\r\n * <fullname>Amazon Cognito Federated Identities</fullname>\r\n *          <p>Amazon Cognito Federated Identities is a web service that delivers scoped temporary\r\n *          credentials to mobile devices and other untrusted environments. It uniquely identifies a\r\n *          device and supplies the user with a consistent identity over the lifetime of an\r\n *          application.</p>\r\n *          <p>Using Amazon Cognito Federated Identities, you can enable authentication with one or\r\n *          more third-party identity providers (Facebook, Google, or Login with Amazon) or an Amazon\r\n *          Cognito user pool, and you can also choose to support unauthenticated access from your app.\r\n *          Cognito delivers a unique identifier for each user and acts as an OpenID token provider\r\n *          trusted by AWS Security Token Service (STS) to access temporary, limited-privilege AWS\r\n *          credentials.</p>\r\n *          <p>For a description of the authentication flow from the Amazon Cognito Developer Guide\r\n *          see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Authentication Flow</a>.</p>\r\n *          <p>For more information see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\">Amazon Cognito Federated Identities</a>.</p>\r\n */\n\nvar CognitoIdentity =\n/** @class */\nfunction (_super) {\n  __extends(CognitoIdentity, _super);\n\n  function CognitoIdentity() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CognitoIdentity.prototype.createIdentityPool = function (args, optionsOrCb, cb) {\n    var command = new CreateIdentityPoolCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.deleteIdentities = function (args, optionsOrCb, cb) {\n    var command = new DeleteIdentitiesCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.deleteIdentityPool = function (args, optionsOrCb, cb) {\n    var command = new DeleteIdentityPoolCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.describeIdentity = function (args, optionsOrCb, cb) {\n    var command = new DescribeIdentityCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.describeIdentityPool = function (args, optionsOrCb, cb) {\n    var command = new DescribeIdentityPoolCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.getCredentialsForIdentity = function (args, optionsOrCb, cb) {\n    var command = new GetCredentialsForIdentityCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.getId = function (args, optionsOrCb, cb) {\n    var command = new GetIdCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.getIdentityPoolRoles = function (args, optionsOrCb, cb) {\n    var command = new GetIdentityPoolRolesCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.getOpenIdToken = function (args, optionsOrCb, cb) {\n    var command = new GetOpenIdTokenCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.getOpenIdTokenForDeveloperIdentity = function (args, optionsOrCb, cb) {\n    var command = new GetOpenIdTokenForDeveloperIdentityCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.listIdentities = function (args, optionsOrCb, cb) {\n    var command = new ListIdentitiesCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.listIdentityPools = function (args, optionsOrCb, cb) {\n    var command = new ListIdentityPoolsCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.listTagsForResource = function (args, optionsOrCb, cb) {\n    var command = new ListTagsForResourceCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.lookupDeveloperIdentity = function (args, optionsOrCb, cb) {\n    var command = new LookupDeveloperIdentityCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.mergeDeveloperIdentities = function (args, optionsOrCb, cb) {\n    var command = new MergeDeveloperIdentitiesCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.setIdentityPoolRoles = function (args, optionsOrCb, cb) {\n    var command = new SetIdentityPoolRolesCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.tagResource = function (args, optionsOrCb, cb) {\n    var command = new TagResourceCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.unlinkDeveloperIdentity = function (args, optionsOrCb, cb) {\n    var command = new UnlinkDeveloperIdentityCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.unlinkIdentity = function (args, optionsOrCb, cb) {\n    var command = new UnlinkIdentityCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.untagResource = function (args, optionsOrCb, cb) {\n    var command = new UntagResourceCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  CognitoIdentity.prototype.updateIdentityPool = function (args, optionsOrCb, cb) {\n    var command = new UpdateIdentityPoolCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  return CognitoIdentity;\n}(CognitoIdentityClient);\n\nexport { CognitoIdentity };","map":null,"metadata":{},"sourceType":"module"}