{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function userAgentMiddleware(options) {\n  return function (next) {\n    return function (args) {\n      var request = args.request;\n      if (!HttpRequest.isInstance(request)) return next(args);\n      var headers = request.headers;\n      var userAgentHeader = options.runtime === \"node\" ? \"user-agent\" : \"x-amz-user-agent\";\n\n      if (!headers[userAgentHeader]) {\n        headers[userAgentHeader] = \"\" + options.defaultUserAgent;\n      } else {\n        headers[userAgentHeader] += \" \" + options.defaultUserAgent;\n      }\n\n      if (options.customUserAgent) {\n        headers[userAgentHeader] += \" \" + options.customUserAgent;\n      }\n\n      return next(__assign(__assign({}, args), {\n        request: request\n      }));\n    };\n  };\n}\nexport var getUserAgentMiddlewareOptions = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"]\n};\nexport var getUserAgentPlugin = function getUserAgentPlugin(config) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}