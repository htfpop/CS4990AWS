{"ast":null,"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\nimport { I18n as I18nClass } from './I18n';\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { Amplify } from '../Amplify';\nvar logger = new Logger('I18n');\nvar _config = null;\nvar _i18n = null;\n/**\r\n * Export I18n APIs\r\n */\n\nvar I18n =\n/** @class */\nfunction () {\n  function I18n() {}\n  /**\r\n   * @static\r\n   * @method\r\n   * Configure I18n part\r\n   * @param {Object} config - Configuration of the I18n\r\n   */\n\n\n  I18n.configure = function (config) {\n    logger.debug('configure I18n');\n\n    if (!config) {\n      return _config;\n    }\n\n    _config = Object.assign({}, _config, config.I18n || config);\n    I18n.createInstance();\n    return _config;\n  };\n\n  I18n.getModuleName = function () {\n    return 'I18n';\n  };\n  /**\r\n   * @static\r\n   * @method\r\n   * Create an instance of I18n for the library\r\n   */\n\n\n  I18n.createInstance = function () {\n    logger.debug('create I18n instance');\n\n    if (_i18n) {\n      return;\n    }\n\n    _i18n = new I18nClass(_config);\n  };\n  /**\r\n   * @static @method\r\n   * Explicitly setting language\r\n   * @param {String} lang\r\n   */\n\n\n  I18n.setLanguage = function (lang) {\n    I18n.checkConfig();\n    return _i18n.setLanguage(lang);\n  };\n  /**\r\n   * @static @method\r\n   * Get value\r\n   * @param {String} key\r\n   * @param {String} defVal - Default value\r\n   */\n\n\n  I18n.get = function (key, defVal) {\n    if (!I18n.checkConfig()) {\n      return typeof defVal === 'undefined' ? key : defVal;\n    }\n\n    return _i18n.get(key, defVal);\n  };\n  /**\r\n   * @static\r\n   * @method\r\n   * Add vocabularies for one language\r\n   * @param {String} langurage - Language of the dictionary\r\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\r\n   */\n\n\n  I18n.putVocabulariesForLanguage = function (language, vocabularies) {\n    I18n.checkConfig();\n    return _i18n.putVocabulariesForLanguage(language, vocabularies);\n  };\n  /**\r\n   * @static\r\n   * @method\r\n   * Add vocabularies for one language\r\n   * @param {Object} vocabularies - Object that has language as key,\r\n   *                                vocabularies of each language as value\r\n   */\n\n\n  I18n.putVocabularies = function (vocabularies) {\n    I18n.checkConfig();\n    return _i18n.putVocabularies(vocabularies);\n  };\n\n  I18n.checkConfig = function () {\n    if (!_i18n) {\n      _i18n = new I18nClass(_config);\n    }\n\n    return true;\n  };\n\n  return I18n;\n}();\n\nexport { I18n };\nAmplify.register(I18n);\n/**\r\n * @deprecated use named import\r\n */\n\nexport default I18n;","map":null,"metadata":{},"sourceType":"module"}